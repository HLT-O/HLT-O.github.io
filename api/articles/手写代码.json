{"title":"手写代码","uid":"8cb2b3268d741ec8cb2f77e2fe593594","slug":"手写代码","date":"2022-04-27T06:03:21.000Z","updated":"2022-05-18T13:48:31.690Z","comments":true,"path":"api/articles/手写代码.json","keywords":null,"cover":"https://pic1.zhimg.com/v2-d2f03725dbae12158ad344675eeebfe5_r.jpg?source=172ae18b","content":"<h1 id=\"面试出场率及高的手写代码\"><a href=\"#面试出场率及高的手写代码\" class=\"headerlink\" title=\"面试出场率及高的手写代码\"></a>面试出场率及高的手写代码</h1><h2 id=\"节流\"><a href=\"#节流\" class=\"headerlink\" title=\"节流\"></a>节流</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> dom1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#dom1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//点击事件的操作</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">point</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>offsetX<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>offsetY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//第一个参数为 点击事件的操作函数 第二个参数为 延迟操作的时间</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> delay</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">//定义一个定时器变量  用于判断点击时是否有定时器</span>\n<span class=\"token keyword\">let</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//返回一个函数，每次点击 就会调用这个函数，所以函数的 this 是 dom1</span>\n<span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//有定时器就直接返回</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//没有定时器就创建一个</span>\n    timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//调用点击事件的操作，绑定到dom1上，arguments是点击事件</span>\n    <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 清除定时器</span>\n    timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\ndom1<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"防抖\"><a href=\"#防抖\" class=\"headerlink\" title=\"防抖\"></a>防抖</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> dom2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#dom2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//点击事件的操作</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">point</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>offsetX<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>offsetY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">let</span> dom2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#dom2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> delay</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">let</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\ndom2<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">myNew</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fun<span class=\"token punctuation\">,</span><span class=\"token operator\">...</span>arg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// 创建一个对象</span>\n   <span class=\"token keyword\">let</span> instance <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n   <span class=\"token comment\">// 对象的__proto__指向构造函数的prototype</span>\n   instance<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span> fun<span class=\"token punctuation\">.</span>prototype\n   <span class=\"token comment\">// 改变构造函数的this指向，并传递参数</span>\n   <span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span>  <span class=\"token function\">fun</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">,</span><span class=\"token operator\">...</span>arg<span class=\"token punctuation\">)</span>\n   <span class=\"token comment\">//如果构造函数中手动返回一个对象，这个myNew将返回构造函数中的对象(我也不知道为什么要这样)</span>\n   <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> person<span class=\"token operator\">===</span><span class=\"token string\">\"object\"</span><span class=\"token operator\">?</span> person<span class=\"token operator\">:</span>instance\n <span class=\"token punctuation\">&#125;</span>\n <span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n   <span class=\"token comment\">// return &#123;a:'a'&#125;</span>\n <span class=\"token punctuation\">&#125;</span>\n <span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sayName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">My name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">&#125;</span>\n <span class=\"token keyword\">const</span> me <span class=\"token operator\">=</span> <span class=\"token function\">myNew</span><span class=\"token punctuation\">(</span>Person<span class=\"token punctuation\">,</span> <span class=\"token string\">'小灵通'</span><span class=\"token punctuation\">)</span>\n me<span class=\"token punctuation\">.</span><span class=\"token function\">sayName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","text":"面试出场率及高的手写代码节流let dom1 = document.querySelector(\"#dom1\"); //点击事件的操作 function point(e) &#123; console.log(this, e.offsetX, e.offsetY); &#125;...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E8%AF%95%E5%87%BA%E5%9C%BA%E7%8E%87%E5%8F%8A%E9%AB%98%E7%9A%84%E6%89%8B%E5%86%99%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">面试出场率及高的手写代码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%8A%82%E6%B5%81\"><span class=\"toc-text\">节流</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%98%B2%E6%8A%96\"><span class=\"toc-text\">防抖</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#new\"><span class=\"toc-text\">new</span></a></li></ol></li></ol>","author":{"name":"HLT","slug":"blog-author","avatar":"https://pic3.zhimg.com/v2-bd05131cd8bea6dc03a408183fc37d22_r.jpg","link":"/","description":"想好好学习,并且记录学习痕迹<br/><h2>加油！！！</h2>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"async、await的用法","uid":"98c0136b7cbfc99c12e56d7a4696a8e1","slug":"async、await的用法","date":"2022-05-11T13:34:32.000Z","updated":"2022-05-17T03:57:59.453Z","comments":true,"path":"api/articles/async、await的用法.json","keywords":null,"cover":"http://www.lucklnk.com/uploadfiles/1567603095.jpg","text":"async await 的用法描述async函数可能包含0个或者多个await表达式。await表达式会暂停整个async函数的执行进程并出让其控制权，只有当其等待的基于promise的异步操作被兑现或被拒绝之后才会恢复进程。promise的解决值会被当作该await表达式的返回...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"HLT","slug":"blog-author","avatar":"https://pic3.zhimg.com/v2-bd05131cd8bea6dc03a408183fc37d22_r.jpg","link":"/","description":"想好好学习,并且记录学习痕迹<br/><h2>加油！！！</h2>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"promise的基本用法","uid":"9f4d3521f710364c385149f2cdd3363c","slug":"promise的基本用法","date":"2022-04-24T09:24:00.000Z","updated":"2022-05-11T13:52:02.326Z","comments":true,"path":"api/articles/promise的基本用法.json","keywords":null,"cover":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg-blog.csdnimg.cn%2F20210222093852121.png%3Fx-oss-process%3Dimage%2Fwatermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpbW9ub3I%3D%2Csize_1%2Ccolor_FFFFFF%2Ct_70&refer=http%3A%2F%2Fimg-blog.csdnimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1653635383&t=299ca07ed2495ad241307392eceb2c3c","text":"promise 是干什么的promise是异步编程的一种解决方案 promise的状态promise有三种状态 pending（进行中） fulfilled（已成功） rejected（已失败） 状态一旦确定，就无法更改 如何使用promisePromise对象是一个构造函数，用...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[],"tags":[],"author":{"name":"HLT","slug":"blog-author","avatar":"https://pic3.zhimg.com/v2-bd05131cd8bea6dc03a408183fc37d22_r.jpg","link":"/","description":"想好好学习,并且记录学习痕迹<br/><h2>加油！！！</h2>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}